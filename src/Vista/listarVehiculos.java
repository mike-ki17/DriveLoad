/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;
import Controlador.VehiculoController;
import Modelo.VehiculoDAO;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author mike
 */
public class listarVehiculos extends javax.swing.JFrame {
    
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(listarVehiculos.class.getName());
    private VehiculoController vehiculoController;
    /**
     * Creates new form listarVehiculos
     */
    public listarVehiculos() {
        initComponents();
        this.vehiculoController = new VehiculoController();
        cargarTablaVehiculos();
//        cargarVehiculos(); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // </editor-fold>
@SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableListVehiculos = new javax.swing.JTable();
        btnELiminar = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        btnEditarVehiculo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableListVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Placa", "Tipo", "Capacidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableListVehiculos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));

        btnELiminar.setBackground(new java.awt.Color(255, 0, 51));
        btnELiminar.setForeground(new java.awt.Color(255, 255, 255));
        btnELiminar.setText("ELIMINAR");
        btnELiminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnELiminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnELiminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 570, 120, 50));

        btnMenu.setBackground(new java.awt.Color(0, 0, 0));
        btnMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnMenu.setText("MENU");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });
        jPanel1.add(btnMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 570, 120, 50));

        btnEditarVehiculo.setBackground(new java.awt.Color(51, 51, 255));
        btnEditarVehiculo.setForeground(new java.awt.Color(255, 255, 255));
        btnEditarVehiculo.setText("EDITAR");
        btnEditarVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarVehiculoActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditarVehiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 570, 100, 50));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Vehiculos Registrados");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 250, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnELiminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnELiminarActionPerformed
        // TODO add your handling code here:
//        int filaSeleccionada = tableListVehiculos.getSelectedRow();
//        if(filaSeleccionada >= 0) {
//            // Obtener placa de la fila seleccionada
//            String placa = (String) tableListVehiculos.getValueAt(filaSeleccionada, 0);
//            // Llamar al controlador para eliminar
//            vehiculoController.eliminarVehiculo(placa);
//            // Actualizar tabla
//            cargarTablaVehiculos();
//        } else {
//            JOptionPane.showMessageDialog(this, "Seleccione un vehículo para eliminar");
//        }
        int filaSeleccionada = tableListVehiculos.getSelectedRow();
        if(filaSeleccionada >= 0) {
                // Confirmar eliminación
                int confirmacion = JOptionPane.showConfirmDialog(
                    this, 
                    "¿Está seguro de eliminar este vehículo?", 
                    "Confirmar eliminación", 
                    JOptionPane.YES_NO_OPTION
                );

                if(confirmacion == JOptionPane.YES_OPTION) {
                    // Obtener la placa (asumiendo que es la primera columna)
                    String placa = tableListVehiculos.getValueAt(filaSeleccionada, 0).toString();
                    // Eliminar a través del controlador
                    if(vehiculoController.eliminarVehiculo(placa)) {
                        // Eliminar solo la fila seleccionada
                        ((DefaultTableModel)tableListVehiculos.getModel()).removeRow(filaSeleccionada);

                        JOptionPane.showMessageDialog(
                            this, 
                            "Vehículo eliminado correctamente", 
                            "Éxito", 
                            JOptionPane.INFORMATION_MESSAGE
                        );
                    } else {
                        JOptionPane.showMessageDialog(
                            this, 
                            "Error al eliminar el vehículo", 
                            "Error", 
                            JOptionPane.ERROR_MESSAGE
                        );
                    }
                }
            } else {
                JOptionPane.showMessageDialog(
                    this, 
                    "Seleccione un vehículo para eliminar", 
                    "Advertencia", 
                    JOptionPane.WARNING_MESSAGE
                );
            }
    }//GEN-LAST:event_btnELiminarActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        // TODO add your handling code here:
        VistaIniciar init = new VistaIniciar();
        init.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnEditarVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarVehiculoActionPerformed
        int filaSeleccionada = tableListVehiculos.getSelectedRow();
        if (filaSeleccionada >= 0) {
            // Obtener datos de la fila seleccionada
            String placa = tableListVehiculos.getValueAt(filaSeleccionada, 0).toString();
            String tipo = tableListVehiculos.getValueAt(filaSeleccionada, 1).toString();
            double capacidad = Double.parseDouble(tableListVehiculos.getValueAt(filaSeleccionada, 2).toString());

            // Crear y mostrar formulario de edición
            EditarVehiculoDialog dialog = new EditarVehiculoDialog(
                this, 
                true, 
                placa, 
                tipo, 
                capacidad, 
                vehiculoController
            );
            dialog.setVisible(true);

            // Refrescar tabla después de editar
            cargarTablaVehiculos();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un vehículo para editar");
        }
    }//GEN-LAST:event_btnEditarVehiculoActionPerformed
//    
//    private void initComponents() {
//        jPanel1 = new javax.swing.JPanel();
//        jScrollPane1 = new javax.swing.JScrollPane();
//        tableListVehiculos = new javax.swing.JTable();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//
//        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
//        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
//
//        tableListVehiculos.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {},
//            new String [] {
//                "Placa", "Tipo", "Capacidad"
//            }
//        ));
//        jScrollPane1.setViewportView(tableListVehiculos);
//
//        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 620, 400));
//
//        getContentPane().add(jPanel1);
//        jPanel1.setBounds(0, 0, 700, 500);
//
//        pack();
//        setLocationRelativeTo(null);
//    }
    /**
     * @param args the command line arguments
     */
   public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new listarVehiculos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnELiminar;
    private javax.swing.JButton btnEditarVehiculo;
    private javax.swing.JButton btnMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableListVehiculos;
    // End of variables declaration//GEN-END:variables

    public JButton getBtnELiminar() {
        return btnELiminar;
    }

    public void setBtnELiminar(JButton btnELiminar) {
        this.btnELiminar = btnELiminar;
    }

    public JTable getTableListVehiculos() {
        return tableListVehiculos;
    }
    
    public DefaultTableModel getTableModel() {
        return (DefaultTableModel) tableListVehiculos.getModel();
    }

    public void setTableListVehiculos(JTable tableListVehiculos) {
        this.tableListVehiculos = tableListVehiculos;
    }

//    private void cargarVehiculos() {
//         // Obtener el modelo actual de la tabla
//        DefaultTableModel modelo = (DefaultTableModel) tableListVehiculos.getModel();
//        modelo.setRowCount(0); // Limpiar tabla antes de llenarla
//
//        VehiculoDAO dao = new VehiculoDAO();
//        dao.obtenerVehiculosTabla(modelo); // Llenar con los datos desde la BD
//    }
//    
    private void cargarTablaVehiculos() {
//        try {
//            DefaultTableModel modelo = (DefaultTableModel) tableListVehiculos.getModel();
//            modelo.setRowCount(0); // Limpiar tabla antes de cargar
//            vehiculoController.cargarVehiculosEnTabla(modelo);
//        } catch (Exception e) {
//            logger.severe("Error al cargar vehículos: " + e.getMessage());
//            JOptionPane.showMessageDialog(this, "Error al cargar datos de vehículos");
//        }
        DefaultTableModel modelo = (DefaultTableModel) tableListVehiculos.getModel();
           modelo.setRowCount(0); // Limpiar tabla antes de cargar

           try {
               vehiculoController.cargarVehiculosEnTabla(modelo);
               tableListVehiculos.setModel(modelo);
           } catch (Exception e) {
               JOptionPane.showMessageDialog(this, "Error al cargar vehículos: " + e.getMessage(), 
                   "Error", JOptionPane.ERROR_MESSAGE);
           }
       }
    
    
    
    
    
}
